{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MethodImplementationRequiredError = exports.ExtendableError = undefined;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})(); //taken from : http://stackoverflow.com/questions/31089801/extending-error-in-javascript-with-es6-syntax\n\n\nvar ExtendableError = exports.ExtendableError = function (_Error) {\n  (0, _inherits3.default)(ExtendableError, _Error);\n\n  function ExtendableError(message) {\n    (0, _classCallCheck3.default)(this, ExtendableError);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (ExtendableError.__proto__ || Object.getPrototypeOf(ExtendableError)).call(this, message));\n\n    _this.name = _this.constructor.name;\n    _this.message = message;\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(_this, _this.constructor);\n    } else {\n      _this.stack = new Error(message).stack;\n    }\n\n    return _this;\n  }\n\n  (0, _createClass3.default)(ExtendableError, [{\n    key: '__reactstandin__regenerateByEval',\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n  return ExtendableError;\n}(Error);\n\nvar MethodImplementationRequiredError = exports.MethodImplementationRequiredError = function (_ExtendableError) {\n  (0, _inherits3.default)(MethodImplementationRequiredError, _ExtendableError);\n\n  function MethodImplementationRequiredError(msg) {\n    (0, _classCallCheck3.default)(this, MethodImplementationRequiredError);\n    return (0, _possibleConstructorReturn3.default)(this, (MethodImplementationRequiredError.__proto__ || Object.getPrototypeOf(MethodImplementationRequiredError)).call(this, msg));\n  }\n\n  (0, _createClass3.default)(MethodImplementationRequiredError, [{\n    key: '__reactstandin__regenerateByEval',\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n  return MethodImplementationRequiredError;\n}(ExtendableError);\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ExtendableError, 'ExtendableError', 'libs/utils/errors.js');\n  reactHotLoader.register(MethodImplementationRequiredError, 'MethodImplementationRequiredError', 'libs/utils/errors.js');\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}