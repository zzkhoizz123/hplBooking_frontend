{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\hplBooking\\\\hplBooking_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\hplBooking\\\\hplBooking_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\hplBooking\\\\hplBooking_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\hplBooking\\\\hplBooking_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\hplBooking\\\\hplBooking_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\hplBooking\\\\hplBooking_frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\hplBooking\\\\hplBooking_frontend\\\\src\\\\components\\\\schedule.js\";\nimport React from 'react';\nimport { Table, Button, Notification, Loading, MessageBox, Popover } from 'element-react';\nimport * as moment from 'moment';\nimport Web3 from 'web3';\nimport api from 'components/api';\n\nvar Schedule =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Schedule, _React$Component);\n\n  function Schedule(props) {\n    var _this;\n\n    _classCallCheck(this, Schedule);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Schedule).call(this, props));\n    _this.state = {\n      newContractAddress: null,\n      currentContract: [],\n      isLoading: false,\n      drizzleState: null,\n      columns: [{\n        label: 'Time',\n        prop: 'time',\n        width: 120,\n        sortable: true\n      }, {\n        label: 'Duration',\n        prop: 'timespan',\n        width: 100,\n        sortable: true\n      }, {\n        label: 'Salary',\n        prop: 'salary',\n        width: 100,\n        sortable: true\n      }, {\n        label: 'Owner',\n        prop: 'owner',\n        width: 130,\n        sortable: true\n      }, {\n        label: 'Helper',\n        prop: 'helper',\n        width: 130,\n        sortable: true\n      }, {\n        label: 'Address',\n        prop: 'address',\n        width: 150\n      }, {\n        label: 'Type',\n        prop: 'type',\n        sortable: true\n      }, {\n        label: 'Status',\n        prop: 'status'\n      }, {\n        label: 'Operations',\n        prop: 'contractAddress',\n        width: 120,\n        fixed: 'right',\n        render: function render(row, column, index) {\n          if (_this.state.data[index].helper == 'Not Assigned') return React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, \"No Helper, no contract\");\n          if (_this.state.data[index].contractAddress) return React.createElement(Button, {\n            type: \"text\",\n            size: \"small\" // onClick={this.getContract.bind(this, index)}\n            ,\n            onClick: _this.watchContract.bind(_assertThisInitialized(_assertThisInitialized(_this)), index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, _this.state.data[index].contractAddress);\n          if (sessionStorage.getItem('role') === '0') return React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, \"Waiting for contract\");\n          return React.createElement(Button, {\n            type: \"text\",\n            size: \"small\",\n            onClick: _this.createContract.bind(_assertThisInitialized(_assertThisInitialized(_this)), index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, \"Create contract\");\n        }\n      }],\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(Schedule, [{\n    key: \"watchContract\",\n    value: function watchContract(index) {\n      window.open(\"https://ropsten.etherscan.io/address/\" + this.state.data[index].contractAddress);\n    }\n  }, {\n    key: \"createContract\",\n    value: function createContract(index) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          drizzle = _this$props.drizzle,\n          drizzleState = _this$props.drizzleState;\n      var work = this.state.data[index];\n      var web3 = new Web3(drizzle.web3.currentProvider);\n      var myContract = new web3.eth.Contract(Work.abi);\n      this.setState({\n        isLoading: true\n      });\n      myContract.deploy({\n        data: Work.bytecode\n      }).send({\n        from: drizzleState.accounts[0],\n        gas: 1500000,\n        gasPrice: '10000000000'\n      }).then(function (newContractInstance) {\n        _this2.setState({\n          newContractAddress: newContractInstance.options.address\n        });\n\n        console.log(work);\n        return newContractInstance.methods.setData(work._owner.walletAddress, work._helper.walletAddress, work._id, work.address, \"\", parseInt(work.salary) * 1000, moment(work.time).valueOf()).send({\n          from: drizzleState.accounts[0],\n          gas: 1500000,\n          gasPrice: '10000000000'\n        });\n      }).then(function () {\n        return api.addContractAddress(_this2.state.data[index]._id, _this2.state.newContractAddress);\n      }).then(function (data) {\n        Notification.success({\n          title: 'Contract creation success',\n          onClick: function onClick() {\n            window.open(\"https://ropsten.etherscan.io/address/\" + _this2.state.newContractAddress);\n          },\n          offset: 300\n        }); // update data with newly returned data\n\n        _this2.state.data[index] = data;\n\n        _this2.forceUpdate();\n      }).catch(function (err) {\n        Notification.error({\n          title: 'Contract creation error'\n        });\n        console.log(err);\n      }).finally(function () {\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"getContract\",\n    value: function getContract(index) {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          drizzle = _this$props2.drizzle,\n          drizzleState = _this$props2.drizzleState;\n      var work = this.state.data[index];\n      var web3 = new Web3(drizzle.web3.currentProvider);\n      var instance = new web3.eth.Contract(Work.abi, work.contractAddress);\n      instance.methods.getData().call({\n        from: drizzleState.accounts[0],\n        gas: 1500000,\n        gasPrice: '10000000000'\n      }).then(function (result) {\n        _this3.setState({\n          currentContract: result\n        });\n\n        console.log(result); // MessageBox.alert(JSON.stringify(result), 'Contract data');\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      api.getWorkListOfUser().then(function (data) {\n        // alert(JSON.stringify(data));\n        data.map(function (d) {\n          d.time = new Date(Date.parse(d.time));\n          d.time = d.time.toLocaleString();\n          d.timespan = moment.duration(d.timespan).asHours();\n          d._owner = d.owner;\n          d.owner = d.owner.username;\n          d._helper = d.helper;\n          d.helper = d.helper ? d.helper.username : 'Not Assigned';\n          d.status = d.status == 0 ? 'Due' : 'Done';\n          d.address = d.location;\n          d.salary = d.expectedSalary;\n        });\n\n        _this4.setState({\n          data: data\n        });\n      }).catch(function (err) {\n        alert(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Loading, {\n        loading: this.state.isLoading,\n        text: \"Creating smart contract\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Table, {\n        style: {\n          width: '100%',\n          backgroundcolor: '1111'\n        },\n        columns: this.state.columns,\n        data: this.state.data,\n        border: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Schedule;\n}(React.Component);\n\nexport { Schedule as default };","map":{"version":3,"sources":["C:\\Users\\Dell\\Desktop\\hplBooking\\hplBooking_frontend\\src\\components\\schedule.js"],"names":["React","Table","Button","Notification","Loading","MessageBox","Popover","moment","Web3","api","Schedule","props","state","newContractAddress","currentContract","isLoading","drizzleState","columns","label","prop","width","sortable","fixed","render","row","column","index","data","helper","contractAddress","watchContract","bind","sessionStorage","getItem","createContract","window","open","drizzle","work","web3","currentProvider","myContract","eth","Contract","Work","abi","setState","deploy","bytecode","send","from","accounts","gas","gasPrice","then","newContractInstance","options","address","console","log","methods","setData","_owner","walletAddress","_helper","_id","parseInt","salary","time","valueOf","addContractAddress","success","title","onClick","offset","forceUpdate","catch","err","error","finally","instance","getData","call","result","getWorkListOfUser","map","d","Date","parse","toLocaleString","timespan","duration","asHours","owner","username","status","location","expectedSalary","alert","backgroundcolor","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Table, Button, Notification, Loading, MessageBox, Popover } from 'element-react';\r\nimport * as moment from 'moment';\r\n\r\nimport Web3 from 'web3';\r\n\r\nimport api from 'components/api';\r\n\r\nexport default class Schedule extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      newContractAddress: null,\r\n      currentContract: [],\r\n      isLoading: false,\r\n      drizzleState: null,\r\n      columns: [\r\n        {\r\n          label: 'Time',\r\n          prop: 'time',\r\n          width: 120,\r\n          sortable: true,\r\n        },\r\n        {\r\n          label: 'Duration',\r\n          prop: 'timespan',\r\n          width: 100,\r\n          sortable: true,\r\n        },\r\n        {\r\n          label: 'Salary',\r\n          prop: 'salary',\r\n          width: 100,\r\n          sortable: true,\r\n        },\r\n        {\r\n          label: 'Owner',\r\n          prop: 'owner',\r\n          width: 130,\r\n          sortable: true,\r\n        },\r\n        {\r\n          label: 'Helper',\r\n          prop: 'helper',\r\n          width: 130,\r\n          sortable: true,\r\n        },\r\n        {\r\n          label: 'Address',\r\n          prop: 'address',\r\n          width: 150,\r\n        },\r\n        {\r\n          label: 'Type',\r\n          prop: 'type',\r\n          sortable: true,\r\n        },\r\n\r\n        {\r\n          label: 'Status',\r\n          prop: 'status',\r\n        },\r\n\r\n        {\r\n          label: 'Operations',\r\n          prop: 'contractAddress',\r\n          width: 120,\r\n          fixed: 'right',\r\n          render: (row, column, index) => {\r\n            if (this.state.data[index].helper == 'Not Assigned')\r\n              return <p>No Helper, no contract</p>;\r\n            if (this.state.data[index].contractAddress)\r\n              return (\r\n                  <Button\r\n                    type=\"text\"\r\n                    size=\"small\"\r\n                    // onClick={this.getContract.bind(this, index)}\r\n                    onClick = {this.watchContract.bind(this, index)}\r\n                    \r\n                  >\r\n                    {this.state.data[index].contractAddress}\r\n                  </Button>\r\n              );\r\n            if (sessionStorage.getItem('role') === '0')\r\n              return <p>Waiting for contract</p>;\r\n            return (\r\n              <Button\r\n                type=\"text\"\r\n                size=\"small\"\r\n                onClick={this.createContract.bind(this, index)}\r\n              >\r\n                Create contract\r\n              </Button>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  watchContract(index) {\r\n    window.open(\"https://ropsten.etherscan.io/address/\" + this.state.data[index].contractAddress);\r\n  }\r\n\r\n  createContract(index) {\r\n    const { drizzle, drizzleState } = this.props;\r\n\r\n    const work = this.state.data[index];\r\n\r\n    var web3 = new Web3(drizzle.web3.currentProvider);\r\n    var myContract = new web3.eth.Contract(Work.abi);\r\n\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n\r\n    myContract\r\n      .deploy({\r\n        data: Work.bytecode,\r\n      })\r\n      .send({\r\n        from: drizzleState.accounts[0],\r\n        gas: 1500000,\r\n        gasPrice: '10000000000',\r\n      })\r\n      .then(newContractInstance => {\r\n        this.setState({\r\n          newContractAddress: newContractInstance.options.address\r\n        });\r\n        console.log(work);\r\n        return newContractInstance.methods.setData(\r\n          work._owner.walletAddress,\r\n          work._helper.walletAddress,\r\n          work._id,\r\n          work.address,\r\n          \"\",\r\n          parseInt(work.salary) * 1000,\r\n          moment(work.time).valueOf()\r\n        ).send({\r\n          from: drizzleState.accounts[0],\r\n          gas: 1500000,\r\n          gasPrice: '10000000000',\r\n        });\r\n      })\r\n      .then(() => {\r\n        return api.addContractAddress(\r\n          this.state.data[index]._id,\r\n          this.state.newContractAddress\r\n        );\r\n      })\r\n      .then(data => {\r\n        Notification.success({\r\n          title: 'Contract creation success',\r\n          onClick: () => {\r\n            window.open(\"https://ropsten.etherscan.io/address/\" + this.state.newContractAddress);\r\n          },\r\n          offset: 300\r\n        });\r\n        // update data with newly returned data\r\n        this.state.data[index] = data;\r\n        this.forceUpdate();\r\n      })\r\n      .catch(err => {\r\n        Notification.error({\r\n          title: 'Contract creation error',\r\n        });\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  getContract(index) {\r\n    const { drizzle, drizzleState } = this.props;\r\n\r\n    const work = this.state.data[index];\r\n\r\n    var web3 = new Web3(drizzle.web3.currentProvider);\r\n    var instance = new web3.eth.Contract(Work.abi, work.contractAddress);\r\n\r\n    instance.methods.getData().call({\r\n      from: drizzleState.accounts[0],\r\n      gas: 1500000,\r\n      gasPrice: '10000000000',\r\n    })\r\n    .then((result) => {\r\n      this.setState({\r\n        currentContract: result\r\n      });\r\n      console.log(result)\r\n      // MessageBox.alert(JSON.stringify(result), 'Contract data');\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    api\r\n      .getWorkListOfUser()\r\n      .then(data => {\r\n        // alert(JSON.stringify(data));\r\n        data.map(d => {\r\n          d.time = new Date(Date.parse(d.time));\r\n          d.time = d.time.toLocaleString();\r\n          d.timespan = moment.duration(d.timespan).asHours();\r\n          d._owner = d.owner;\r\n          d.owner = d.owner.username;\r\n          d._helper = d.helper;\r\n          d.helper = d.helper ? d.helper.username : 'Not Assigned';\r\n          d.status = d.status == 0 ? 'Due' : 'Done';\r\n          d.address = d.location;\r\n          d.salary = d.expectedSalary;\r\n        });\r\n        this.setState({ data });\r\n      })\r\n      .catch(err => {\r\n        alert(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Loading loading={this.state.isLoading} text=\"Creating smart contract\">\r\n        <Table\r\n          style={{ width: '100%', backgroundcolor: '1111' }}\r\n          columns={this.state.columns}\r\n          data={this.state.data}\r\n          border\r\n        />\r\n      </Loading>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}