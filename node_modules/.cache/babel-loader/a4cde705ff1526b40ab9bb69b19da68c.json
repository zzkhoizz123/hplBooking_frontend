{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Message;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _Toast = require('./Toast');\n\nvar _Toast2 = _interopRequireDefault(_Toast);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction Message() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var type = arguments[1];\n  var div = document.createElement('div');\n  var messageBox = document.getElementsByClassName('el-message-content')[0];\n\n  if (messageBox) {\n    messageBox.appendChild(div);\n    document.body.appendChild(messageBox);\n  } else {\n    var _messageBox = document.createElement('div');\n\n    _messageBox.className = \"el-message-content\";\n\n    _messageBox.appendChild(div);\n\n    document.body.appendChild(_messageBox);\n  }\n\n  if (typeof props === 'string' || _react2.default.isValidElement(props)) {\n    props = {\n      message: props\n    };\n  }\n\n  if (type) {\n    props.type = type;\n  }\n\n  var component = _react2.default.createElement(_Toast2.default, Object.assign(props, {\n    willUnmount: function willUnmount() {\n      var messageBox = document.getElementsByClassName('el-message-content')[0];\n\n      _reactDom2.default.unmountComponentAtNode(div);\n\n      messageBox.removeChild(div);\n\n      if (props.onClose instanceof Function) {\n        props.onClose();\n      }\n    }\n  }));\n\n  _reactDom2.default.render(component, div);\n}\n/* eslint-disable */\n\n\n['success', 'warning', 'info', 'error'].forEach(function (type) {\n  Message[type] = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Message(options, type);\n  };\n});\n/* eslint-enable */\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Message, 'Message', 'src/message/Message.jsx');\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}